[debug] > Exec(;reload; set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download resolveClassifiers resolveSbtClassifiers" ;*/*:dumpStructureTo C:/Users/sinha/AppData/Local/Temp/sbt-structure1.xml; session clear-all ; set ideaPort in Global := 50412, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.1 (Oracle Corporation Java 13.0.2)
[debug]             Load.loadUnit: plugins took 19.4971ms
[debug]             Load.loadUnit: defsScala took 0.0039ms
[debug] [Loading] Scanning directory C:\Users\sinha\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\sinha\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.8082 ms
[debug]                 Load.resolveProject(global-plugins) took 0.9131ms
[debug]               Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\sinha\.sbt\1.0\plugins, plugins: List(<none>))) took 2.0008ms
[debug] [Loading] Done in C:\Users\sinha\.sbt\1.0\plugins, returning: (global-plugins)
[debug]             Load.loadUnit: loadedProjectsRaw took 2.6289ms
[debug]             Load.loadUnit: cleanEvalClasses took 0.0054ms
[debug]           Load.loadUnit(file:/C:/Users/sinha/.sbt/1.0/plugins/, ...) took 24.0406ms
[debug]         Load.apply: load took 24.9671ms
[debug]         Load.apply: resolveProjects took 0.0971ms
[debug]         Load.apply: finalTransforms took 3.3906ms
[debug]         Load.apply: config.delegates took 0.1445ms
[debug]         Load.apply: Def.make(settings)... took 26.9129ms
[debug]         Load.apply: structureIndex took 12.517ms
[debug]         Load.apply: mkStreams took 0.0048ms
[info] loading global plugins from C:\Users\sinha\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]       Load.defaultLoad until apply took 189.0931ms
[debug]                 Load.loadUnit: plugins took 33.66ms
[debug]                 Load.loadUnit: defsScala took 0.0019ms
[debug] [Loading] Scanning directory C:\Users\sinha\IdeaProjects\SparkCurveE2E\project
[debug]                   Load.loadUnit: mkEval took 0.3551ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\sinha\IdeaProjects\SparkCurveE2E\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.6633 ms
[info] loading settings for project sparkcurvee2e-build from plugins.sbt,idea.sbt ...
[debug]                     Load.resolveProject(sparkcurvee2e-build) took 1.1582ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id sparkcurvee2e-build, base: C:\Users\sinha\IdeaProjects\SparkCurveE2E\project, plugins: List(<none>))) took 2.071ms
[debug] [Loading] Done in C:\Users\sinha\IdeaProjects\SparkCurveE2E\project, returning: (sparkcurvee2e-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 27.0513ms
[debug]                 Load.loadUnit: cleanEvalClasses took 6.0807ms
[debug]               Load.loadUnit(file:/C:/Users/sinha/IdeaProjects/SparkCurveE2E/project/, ...) took 67.4038ms
[debug]             Load.apply: load took 68.3369ms
[debug]             Load.apply: resolveProjects took 0.0655ms
[debug]             Load.apply: finalTransforms took 3.15ms
[debug]             Load.apply: config.delegates took 0.1576ms
[debug]             Load.apply: Def.make(settings)... took 26.1221ms
[debug]             Load.apply: structureIndex took 8.936ms
[debug]             Load.apply: mkStreams took 0.0021ms
[info] loading project definition from C:\Users\sinha\IdeaProjects\SparkCurveE2E\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 201.9976ms
[debug]           Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\sinha\IdeaProjects\SparkCurveE2E
[debug]             Load.loadUnit: mkEval took 0.2752ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\sinha\IdeaProjects\SparkCurveE2E, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtide.ConfigPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 0.8082 ms
[info] loading settings for project sparkcurvee2e from build.sbt ...
[debug]               Load.resolveProject(sparkcurvee2e) took 18.8224ms
[debug]             Load.loadTransitive: finalizeProject(Project(id sparkcurvee2e, base: C:\Users\sinha\IdeaProjects\SparkCurveE2E, plugins: List(<none>))) took 19.9618ms
[debug] [Loading] Done in C:\Users\sinha\IdeaProjects\SparkCurveE2E, returning: (sparkcurvee2e)
[debug]           Load.loadUnit: loadedProjectsRaw took 82.0415ms
[debug]           Load.loadUnit: cleanEvalClasses took 20.5653ms
[debug]         Load.loadUnit(file:/C:/Users/sinha/IdeaProjects/SparkCurveE2E/, ...) took 305.3491ms
[debug]       Load.apply: load took 306.5371ms
[debug]       Load.apply: resolveProjects took 0.0762ms
[debug]       Load.apply: finalTransforms took 9.8421ms
[debug]       Load.apply: config.delegates took 0.1229ms
[debug]       Load.apply: Def.make(settings)... took 27.5681ms
[debug]       Load.apply: structureIndex took 8.6542ms
[debug]       Load.apply: mkStreams took 0.0021ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to SparkCurveE2E (in build file:/C:/Users/sinha/IdeaProjects/SparkCurveE2E/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download resolveClassifiers resolveSbtClassifiers", None, None)
[info] Defining Global / sbtStructureOptions
[info] The new value will be used by Global / ssOptions
[debug] Defining 
[debug] 	Global / sbtStructureOptions
[debug] 
[debug] The new value will be used by 
[debug] 	Global / ssOptions
[info] Reapplying settings...
[info] set current project to SparkCurveE2E (in build file:/C:/Users/sinha/IdeaProjects/SparkCurveE2E/)
[debug] > Exec(*/*:dumpStructureTo C:/Users/sinha/AppData/Local/Temp/sbt-structure1.xml, None, None)
[debug] Evaluating tasks: Global / dumpStructureTo
[warn] sbt 0.13 shell syntax is deprecated; use slash syntax instead: Global / dumpStructureTo
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[info] Writing structure to C:\Users\sinha\AppData\Local\Temp\sbt-structure1.xml...
[info] Done.
[success] Total time: 2 s, completed 10-Jan-2022, 2:01:38 pm
[debug] > Exec(session clear-all, None, None)
[info] Reapplying settings...
[info] set current project to SparkCurveE2E (in build file:/C:/Users/sinha/IdeaProjects/SparkCurveE2E/)
[debug] > Exec(set ideaPort in Global := 50412, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to SparkCurveE2E (in build file:/C:/Users/sinha/IdeaProjects/SparkCurveE2E/)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
